# Generated by Django 3.2 on 2021-04-20 03:41

import os
import json
import re

from django.db import migrations

book_store_json_dir = os.path.abspath(
    os.path.join(os.path.dirname(__file__), '../../data'))
book_store_filename = 'example.json'


def parse_op_hour_str(op_h_str):
    op_hour_datas = []

    for time_item in op_h_str.split('/'):
        week_days_datas = re.findall(
            "(Mon|Tues|Wed|Thurs|Fri|Sat|Sun)+", time_item)
        hours_datas = re.findall("(\d+):?(\d+)*\s(am|pm)", time_item)
        # 2:30 pm - 8 pm -> [('2', '30', 'pm'), ('8', '', 'pm')]

        data_dict = prepare_hours_datas(hours_datas)

        for week_day in week_days_datas:
            data = data_dict.copy()
            data['week_day'] = week_day

            op_hour_datas += [data]

    return op_hour_datas


def prepare_hours_datas(hours_datas):
    # [('2', '30', 'pm'), ('8', '', 'pm')]
    start_data, end_data = hours_datas

    start_hour, start_min, start_noon = start_data
    end_hour, end_min, end_noon = end_data

    return {
        'start_hour': add_12_afternoon(start_hour, start_noon),
        'start_min': convert_empty_to_0(start_min),
        'end_hour': add_12_afternoon(end_hour, end_noon),
        'end_min': convert_empty_to_0(end_min),
    }


def add_12_afternoon(hour, noon="am"):
    return str(int(hour) + 12) if noon.strip() == "pm" else hour


def convert_empty_to_0(mi):
    return 0 if mi.strip() == '' else mi


def load_book_store(apps, schema_editor):
    book_store_file = os.path.join(book_store_json_dir, book_store_filename)

    with open(book_store_file, 'r') as book_store:
        data = json.load(book_store)

        BookStore = apps.get_model("bookstore_api", "BookStore")
        Book = apps.get_model("bookstore_api", "Book")
        OpeningHour = apps.get_model("bookstore_api", "OpeningHour")

        for store_data in data:
            bs = BookStore(
                cash_balance=store_data['cashBalance'],
                store_name=store_data['storeName'],
            )
            bs.save()

            for book_data in store_data['books']:
                Book(
                    books_store=bs,
                    book_name=book_data['bookName'],
                    price=book_data['price'],
                ).save()

            for open_hours in parse_op_hour_str(store_data['openingHours']):
                OpeningHour(
                    books_store=bs,
                    week_day=open_hours['week_day'],
                    start_hour=open_hours['start_hour'],
                    start_min=open_hours['start_min'],
                    end_hour=open_hours['end_hour'],
                    end_min=open_hours['end_min']
                ).save()


def unload_book_store(apps, schema_editor):
    BookStore = apps.get_model("bookstore_api", "BookStore")
    Book = apps.get_model("bookstore_api", "Book")
    OpeningHour = apps.get_model("bookstore_api", "OpeningHour")

    for mod in [BookStore, Book, OpeningHour]:
        mod.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ('bookstore_api', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_book_store, reverse_code=unload_book_store),
    ]
